---
interface Props {
  header: boolean
  data: Array<Record<string, string>>
  rows: number[]
  columns: string[]
  addColumns?: {
    name: string
    header?: string
    source: string
    formula: (cvalue: string) => string
  }[]
}

const { header, data, rows, columns, addColumns = [] } = Astro.props

const toColumnIndex = (alpha: string) => alpha.charCodeAt(0) - "A".charCodeAt(0)

const pickColumnIdxs = columns.map(toColumnIndex)

const headers = (() => {
  // Object.keysの要素数が最も大きいものを採用
  const keys = data.map((row) => Object.keys(row))
  const header = keys.reduce((acc, cur) => {
    return cur.length > acc.length ? cur : acc
  }, [])
  return header
})()

const pickHeaders = headers.filter((_, colIdx) => pickColumnIdxs.includes(colIdx))

const pickRows = rows.map((row) => row - 2)

const table = data
  .filter((_, i) => pickRows.includes(i))
  .map((row) => {
    return pickHeaders.map((header) => {
      return row[header] || ""
    })
  })

const columnNames = [...columns, addColumns.map((col) => col.name)].flat().sort()

const cells = table.map((row) => {
  return columnNames.map((col, c) => {
    const newColumn = addColumns.find((c) => c.name === col)
    if (newColumn) {
      const source = columnNames.indexOf(newColumn.source)
      return newColumn.formula(row[source])
    } else {
      return row[c]
    }
  })
})

const headerNames = columnNames.map((col) => {
  const newColumn = addColumns.find((c) => c.name === col)
  return newColumn ? newColumn.header : headers[toColumnIndex(col)]
})
---

<table class="Excel-table">
  <tbody>
    <tr>
      <th scope="col"></th>
      {columnNames.map((col) => <th scope="col">{col}</th>)}
    </tr>
    {
      header && (
        <tr>
          <th scope="row">1</th>
          {headerNames.map((header) => (
            <td>{header}</td>
          ))}
        </tr>
      )
    }
    {
      cells.map((row, i) => (
        <tr>
          <th scope="row">{rows[i]}</th>
          {row.map((cell) => (
            <td>{cell}</td>
          ))}
        </tr>
      ))
    }
  </tbody>
</table>
