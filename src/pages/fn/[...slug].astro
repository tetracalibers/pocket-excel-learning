---
import { getCollection } from "astro:content"
import ArticlePageRoot from "@/layout/ArticlePageRoot.astro"
import ColorTag from "@/components/tag/ColorTag.astro"
import FunctionSignature from "@/components/fn/FunctionSignature.astro"
import FunctionReturn from "@/components/fn/FunctionReturn.astro"
import Breadcrumb from "@/components/article/Breadcrumb.astro"
import { Heading, Hr } from "flowbite-svelte"
import TopicTag from "@/components/tag/TopicTag.astro"
import FunctionTag from "@/components/tag/FunctionTag.astro"

export async function getStaticPaths() {
  const blogEntries = await getCollection("fn")
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }))
}

const { entry } = Astro.props
const { data } = entry
const { Content } = await entry.render()

const { category } = data
---

<ArticlePageRoot>
  <main class="max-w-screen-md mx-auto">
    <Breadcrumb />
    <article>
      <Heading tag="h1" class="mb-10 mt-14 font-normal">{data.name}</Heading>
      <FunctionSignature name={data.name} args={data.args} coloring />
      <p class="my-6">{data.summary}</p>
      {
        data.return && (
          <>
            <h2>実行結果</h2>
            <FunctionReturn returns={data.return} />
          </>
        )
      }
      <table class="mt-6">
        <tr>
          <th class="flex mr-6 whitespace-nowrap font-normal">使えるバージョン</th>
          <td>
            <ul class="flex flex-wrap gap-y-[6px] gap-x-[8px]">
              {
                data.available.map((version) => (
                  <li>
                    <ColorTag label={version} color="rgba(227, 226, 224, 0.5)" />
                  </li>
                ))
              }
            </ul>
          </td>
        </tr>
        <tr>
          <th class="flex mr-6 whitespace-nowrap font-normal">カテゴリー</th>
          <td>
            <ColorTag {...category} />
          </td>
        </tr>
        {
          data.relatedTopics.length > 0 && (
            <tr>
              <th class="flex mr-6 whitespace-nowrap font-normal">関連するトピック</th>
              <td>
                <ul class="flex flex-wrap gap-y-[6px] gap-x-[8px]">
                  {data.relatedTopics.map((topic) => (
                    <li>
                      <TopicTag slug={topic.slug} />
                    </li>
                  ))}
                </ul>
              </td>
            </tr>
          )
        }
        {
          data.similarFn.length > 0 && (
            <tr>
              <th class="flex mr-6 whitespace-nowrap font-normal">似ている関数</th>
              <td>
                <ul class="flex flex-wrap gap-y-[6px] gap-x-[8px]">
                  {data.similarFn.map((fn) => (
                    <li>
                      <FunctionTag slug={fn.slug} />
                    </li>
                  ))}
                </ul>
              </td>
            </tr>
          )
        }
        {
          data.togetherFn.length > 0 && (
            <tr>
              <th class="flex mr-6 whitespace-nowrap font-normal">よく一緒に使う関数</th>
              <td>
                <ul class="flex flex-wrap gap-y-[6px] gap-x-[8px]">
                  {data.togetherFn.map((fn) => (
                    <li>
                      <FunctionTag slug={fn.slug} />
                    </li>
                  ))}
                </ul>
              </td>
            </tr>
          )
        }
      </table>
      <Hr />
      <div class="_content">
        <Content />
      </div>
    </article>
  </main>
</ArticlePageRoot>

<style>
  ._content :global(h2) {
    margin-top: 2.5rem;
    margin-bottom: 2.5rem;
    width: 100%;
    font-size: 1.875rem;
    line-height: 2.25rem;
    font-weight: 400;
  }

  ._content :global(h3) {
    margin-top: 2.5rem;
    margin-bottom: 2.5rem;
    width: 100%;
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 400;
  }
</style>
