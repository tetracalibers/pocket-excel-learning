---
import { getCollection } from "astro:content"
import ArticlePageRoot from "@/layout/ArticlePageRoot.astro"
import ColorTag from "@/components/tag/ColorTag.astro"
import Breadcrumb from "@/components/article/Breadcrumb.astro"
import { Heading, Hr, Li } from "flowbite-svelte"
import UList from "@/components/content/UList.astro"
import Toc from "@/components/article/Toc.astro"

export async function getStaticPaths() {
  const entries = await getCollection("topic")
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }))
}

const { entry } = Astro.props
const { data } = entry
const { Content, headings } = await entry.render()

const { category } = data
---

<ArticlePageRoot>
  <main class="max-w-screen-md mx-auto">
    <Breadcrumb />
    <article>
      <Heading tag="h1" class="mb-10 mt-14 font-normal">{data.title}</Heading>
      <table>
        <tr>
          <th class="flex mr-6 whitespace-nowrap font-normal">カテゴリー</th>
          <td>
            <ColorTag {...category} />
          </td>
        </tr>
      </table>
      <Hr />
      <Toc headings={headings} />
      <div class="_content">
        <Content components={{ ul: UList, li: Li }} />
      </div>
    </article>
  </main>
</ArticlePageRoot>

<style>
  ._content :global(h2) {
    @apply py-2 mb-10 mt-20 text-3xl font-normal border-y border-zinc-300;
    margin-inline: calc(-1 * var(--body-padding-x));
    padding-inline-start: var(--body-padding-x);
  }

  ._content :global(h3) {
    @apply my-10 text-2xl font-normal flex items-center;
    margin-inline-start: calc(-1 * var(--body-padding-x));
  }
  ._content :global(h3::before) {
    @apply block h-px content-[""] bg-zinc-300;
    width: calc(var(--body-padding-x) - 0.5ch);
    margin-inline-end: 0.5ch;
  }
  ._content :global(h3::after) {
    @apply block h-px content-[""] flex-grow bg-zinc-300;
    margin-inline-start: 0.5ch;
    margin-inline-end: calc(-1 * var(--body-padding-x));
  }

  ._content :global(h4) {
    @apply my-10 text-xl font-normal inline-block border-b-[3px] border-double border-zinc-200;
    margin-inline-start: calc(-0.5 * var(--body-padding-x));
    padding-inline: calc(0.5 * var(--body-padding-x));
  }

  ._content :global(h5) {
    @apply my-10 text-lg font-normal inline-block border-b-[3px] border-dotted border-zinc-200;
  }
</style>
