---
import { getCollection } from "astro:content"
import ArticlePageRoot from "@/layout/ArticlePageRoot.astro"
import UList from "../../components/content/UList.astro"
import FunctionTag from "@/components/tag/FunctionTag.astro"
import ColorTag from "@/components/tag/ColorTag.astro"
import Toc from "@/components/article/Toc.astro"
import Breadcrumb from "@/components/article/Breadcrumb.astro"
import ExternalLinkIcon from "@/icons/iconamoon/link-external-thin.astro"
import { Heading, Li, Hr } from "flowbite-svelte"
import { SITE_BASE } from "@/site-config"

export async function getStaticPaths() {
  const blogEntries = await getCollection("questions", (entry) => {
    return import.meta.env.DEV || !entry.data.draft
  })
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }))
}

const { entry } = Astro.props
const { data } = entry
const { Content, headings } = await entry.render()
---

<ArticlePageRoot>
  <main class="max-w-screen-md mx-auto">
    <Breadcrumb />
    <article>
      <Heading tag="h1" class="mb-10 mt-14 font-normal">{data.title}</Heading>
      <table class="grid auto-cols-[minmax(0,max-content)] leading-snug gap-y-4 py-3">
        <tbody class="contents">
          <tr class="grid grid-cols-subgrid col-span-2 items-baseline gap-6">
            <th class="flex whitespace-nowrap font-normal">使う関数</th>
            <td>
              <ul class="flex flex-wrap gap-y-[6px] gap-x-[8px]">
                {
                  data.useFn.map((fn) => (
                    <li class="flex">
                      <FunctionTag slug={fn.slug} />
                    </li>
                  ))
                }
              </ul>
            </td>
          </tr>
          <tr class="grid grid-cols-subgrid col-span-2 items-baseline gap-6">
            <th class="flex whitespace-nowrap font-normal">カテゴリー</th>
            <td>
              <ColorTag {...data.category} />
            </td>
          </tr>
          <tr class="grid grid-cols-subgrid col-span-2 items-baseline gap-6">
            <th class="flex whitespace-nowrap font-normal">使えるバージョン</th>
            <td>
              <ul class="flex flex-wrap gap-y-[6px] gap-x-[8px]">
                {
                  data.available.map((version) => (
                    <li>
                      <ColorTag label={version} color="rgba(227, 226, 224, 0.5)" />
                    </li>
                  ))
                }
              </ul>
            </td>
          </tr>
          {
            data.sheet && (
              <tr class="grid grid-cols-subgrid col-span-2 items-baseline gap-6">
                <th class="flex whitespace-nowrap font-normal">作業に使うデータ</th>
                <td>
                  <a
                    href={`${SITE_BASE}/sheet/${data.sheet}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex items-center gap-1"
                  >
                    <span class="inline-block truncate">{data.sheet}</span>
                    <ExternalLinkIcon svgClass="w-2.5 shrink-0" />
                  </a>
                </td>
              </tr>
            )
          }
        </tbody>
      </table>
      <Hr />
      {headings.length > 0 && <Toc headings={headings} />}
      <div class="_content"><Content components={{ ul: UList, li: Li }} /></div>
    </article>
  </main>
</ArticlePageRoot>

<style>
  ._content :global(h2) {
    @apply my-10 text-4xl font-normal;
  }

  ._content :global(h3) {
    @apply my-10 text-3xl font-normal;
  }

  ._content :global(h4) {
    @apply my-10 text-2xl font-normal;
  }
</style>
